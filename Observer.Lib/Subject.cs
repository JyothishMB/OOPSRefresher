using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Observer.Lib
{
    public class Subject : ISubject
    {
        private List<IObserver> _observers = new List<IObserver>();

        private string ReportName {  get; set; }
        private string GeneratedBy { get; set; }
        private bool IsAvailable {  get; set; }

        public Subject(string reportName, string generatedBy, bool isAvailable)
        {
            ReportName = reportName;
            GeneratedBy = generatedBy;  
            IsAvailable = isAvailable;
        }

        public bool IsReady()
        {
            return IsAvailable;
        }

        public void MakeReady(bool isAvailable)
        {
            this.IsAvailable = isAvailable;
            NotifyObserver();
        }
        
        
        public void Register(IObserver observer)
        {
            _observers.Add(observer);
        }

        public void Remove(IObserver observer)
        {
            _observers.Remove(observer);
        }

        public void NotifyObserver()
        {
            Console.WriteLine("Report Name :"
                            + ReportName + ", Generated by : "
                            + GeneratedBy + " is Now available. Please check.");
            Console.WriteLine();
            foreach (IObserver observer in _observers)
            {
                //By Calling the Update method, we are sending notifications to observers
                observer.Update(IsAvailable);
            }
        }
    }
}
